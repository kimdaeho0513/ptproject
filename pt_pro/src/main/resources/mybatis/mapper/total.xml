<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="totalMapper">
		<select id="usersSelectAll" resultType="managementDto">
			SELECT u.USERSCODE AS mngNum 
			 , u.USERID AS mngId
			 , u.PASSWORD AS mngPass
			 , u.NAME AS mngName
			 , u.BIRTH AS mngBirth
			 , u.PHONE AS mngPhone
			 , u.EMAIL AS mngEmail
			 , u.GENDER AS mngGender
			 , u.ROLES AS mngRole
			 , u.HIDDEN AS mngHidden
			 , u.DELETEDATE AS mngDeleteDate
			 , u.DELETED AS mngDeleted
			 , u.DATELOG AS mngLog
			 , m.MEM_COUNT AS memCount
			 , m.MEM_PT	AS memPt
			 , m.MEM_USER  AS memUser
			 FROM USERS u 
			 FULL JOIN MEMBERS m 
			 ON u.USERSCODE = m.MEM_USER
	</select>
<<<<<<< HEAD
	<!-- 수정전
	<select id="usersSelectAll" resultType="managementDto">
=======
	<select id="totalSelectAll" resultType="managementDto">
		SELECT ID AS mngId
		     , NAME AS mngName
		     , PHONENUMBER AS mngNumber 
		  FROM TOTAL
	</select>-->
	<select id="totalSelectAll" resultType="managementDto">
>>>>>>> refs/remotes/origin/이재윤
		SELECT USERSCODE AS mngNum 
			 , USERID AS mngId
			 , PASSWORD AS mngPass
			 , NAME AS mngName
			 , BIRTH AS mngBirth
<<<<<<< HEAD
			 , PHONE AS mngPhone
=======
			 , phone AS mngPhon
>>>>>>> refs/remotes/origin/이재윤
			 , EMAIL AS mngEmail
			 , GENDER AS mngGender
			 , ROLES AS mngRole
<<<<<<< HEAD
			 , HIDDEN AS mngHidden
			 , DELETEDATE AS mngDeleteDate
			 , DELETED AS mngDeleted
			 , DATELOG AS mngLog
=======
>>>>>>> refs/remotes/origin/이재윤
		FROM USERS 
	</select>
	-->
	<select id="selectData" resultType="managementDto">
<<<<<<< HEAD
		SELECT 
			USERSCODE AS mngNum 
=======
		SELECT USERSCODE AS mngNum 
			 , USERID AS mngId
			 , NAME AS mngName
			 , phone AS mngPhon
			 , ROLES AS mngRole
		FROM USERS 
		WHERE NUM = #{mngNum}
	</select>
	
	<select id="detailDatas" resultType="managementDto">
		SELECT USERSCODE AS mngNum 
>>>>>>> refs/remotes/origin/이재윤
			 , USERID AS mngId
			 , PASSWORD AS mngPass
			 , NAME AS mngName
			 , BIRTH AS mngBirth
<<<<<<< HEAD
			 , PHONE AS mngPhone
=======
			 , phone AS mngPhon
>>>>>>> refs/remotes/origin/이재윤
			 , EMAIL AS mngEmail
			 , GENDER AS mngGender
			 , ROLES AS mngRole
<<<<<<< HEAD
			 , HIDDEN AS mngHidden
			 , DELETEDATE AS mngDeleteDate
			 , DELETED AS mngDeleted
			 , DATELOG AS mngLog
=======
>>>>>>> refs/remotes/origin/이재윤
		FROM USERS 
		WHERE USERSCODE = #{mngNum}
	</select>
	
	<select id="AllData" resultType="managementDto">
			SELECT u.USERSCODE AS mngNum 
			 , u.USERID AS mngId
			 , u.PASSWORD AS mngPass
			 , u.NAME AS mngName
			 , u.BIRTH AS mngBirth
			 , u.PHONE AS mngPhone
			 , u.EMAIL AS mngEmail
			 , u.GENDER AS mngGender
			 , u.ROLES AS mngRole
			 , u.HIDDEN AS mngHidden
			 , u.DELETEDATE AS mngDeleteDate
			 , u.DELETED AS mngDeleted
			 , u.DATELOG AS mngLog
			 , m.MEM_COUNT AS memCount
			 , m.MEM_PT	AS memPt
			 , m.MEM_USER  AS memUser
			 FROM USERS u 
			 FULL JOIN MEMBERS m 
			 ON u.USERSCODE = m.MEM_USER
			 WHERE USERSCODE = #{mngNum}
	</select>
	
	<!-- PT카운트 PT선생  -->
	<select id="memberDatas" resultType="memberDto">
		SELECT m.MEM_COUNT AS memCount
		, m.MEM_PT	AS memPt
		, m.MEM_USER  AS memUser
		FROM MEMBERS m 
		JOIN USERS u 
		ON m.MEM_USER = u.USERSCODE
		WHERE u.USERSCODE = #{mngNum}
	</select>
	
	
	
	<!-- 멤버만 -->
	<select id="selectMember" resultType="managementDto">
<<<<<<< HEAD
		SELECT USERSCODE AS mngNum 
			 , USERID AS mngId
			 , PASSWORD AS mngPass
			 , NAME AS mngName
			 , BIRTH AS mngBirth
			 , PHONE AS mngPhone
			 , EMAIL AS mngEmail
			 , GENDER AS mngGender
			 , ROLES AS mngRole
			 , HIDDEN AS mngHidden
			 , DELETEDATE AS mngDeleteDate
			 , DELETED AS mngDeleted
			 , DATELOG AS mngLog
		FROM USERS 
		WHERE ROLES = 'M'
=======
		SELECT ROLE AS mngRole
		FROM USERS 
		WHERE IN (M)
>>>>>>> refs/remotes/origin/이재윤
	</select>
	
	<!-- 트레이너만 -->
	<select id="selectTrainer" resultType="managementDto">
<<<<<<< HEAD
		SELECT USERSCODE AS mngNum 
			 , USERID AS mngId
			 , PASSWORD AS mngPass
			 , NAME AS mngName
			 , BIRTH AS mngBirth
			 , PHONE AS mngPhone
			 , EMAIL AS mngEmail
			 , GENDER AS mngGender
			 , ROLES AS mngRole
			 , HIDDEN AS mngHidden
			 , DELETEDATE AS mngDeleteDate
			 , DELETED AS mngDeleted
			 , DATELOG AS mngLog
		FROM USERS 
		WHERE ROLES = 'T'
=======
		SELECT ROLES AS mngRole
		FROM USERS 
		WHERE IN (T) = ${trainer}
>>>>>>> refs/remotes/origin/이재윤
	</select>
	
	<!-- 검색 -->
	<select id="search" resultType="managementDto">
		SELECT NAME, USERID, PHONE
		FROM USERS
		WHERE (NAME LIKE '%'||#{keyword}||'%' OR USERID LIKE '%'||#{keyword}||'%' OR PHONE LIKE '%'||#{keyword}||'%')
	</select>
	
	<!-- 수정 맴버데이터-->
	<update id="updateMember" parameterType="managementDto">
 	 UPDATE USERS
 		SET  PASSWORD = #{mngPass}
			 , BIRTH = #{mngBirth}
			 , PHONE = #{mngPhone}
			 , EMAIL = #{mngEmail}
			 , GENDER = #{mngGender}
		WHERE USERSCODE = #{mngNum}
	</update>
	
	<!-- 수정 pt데이터 -->
	<update id="updatePt" parameterType="managementDto">
	UPDATE MEMBERS
	   SET MEM_COUNT = #{memCount}
		 , MEM_PT = #{memPt}
		WHERE MEM_USER = #{mngNum}
	</update>
	
	
	<!-- 삭제 -->
	<delete id="deleteMember">
		DELETE FROM USERS
		WHERE USERSCODE = #{mngNum}
	</delete>
	
	<!-- 비밀번호 체크 
	<select id="check" resultType="int">
		SELECT 
			COUNT(*)
			FROM USERS
			WHERE  USERID = ${mngId} AND PASSWORD = #{mngPass}
	</select>
	-->
</mapper>
